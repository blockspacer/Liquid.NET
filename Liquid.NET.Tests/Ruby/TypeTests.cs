//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     Source: types.txt
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Liquid.Ruby\writetest.rb
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Liquid.NET.Constants;
using Xunit;

namespace Liquid.NET.Tests.Ruby
{
    
    public class TypeTests {

        [Theory]
        [InlineData(@"", @"")]
        [InlineData(@"{% assign myarray = """" |split: "","" %}{{ myarray[0] }}", @"")]
        [InlineData(@"{% assign myarray = ""1,2,3,4"" |split: "","" %}{{ myarray[-2] }}", @"3")]
        [InlineData(@"{% assign myarray = ""1,2,3,4"" |split: "","" %}{{ myarray[-10] }}", @"")]
        [InlineData(@"{% assign myarray = ""1,2,3,4"" |split: "","" %}{{ myarray.size }}", @"4")]
        [InlineData(@"{% assign myarray = """" |split: "","" %}{{ myarray.first }}", @"")]
        [InlineData(@"{% assign myarray = """" |split: "","" %}{{ myarray.last }}", @"")]
        [InlineData(@"{{ myarray.first }}", @"")]
        [InlineData(@"{{ myarray.last }}", @"")]
        public void It_Should_Match_Ruby_Output(String input, String expected) {

            // Arrange
            ITemplateContext ctx = new TemplateContext().WithAllFilters();
            var template = LiquidTemplate.Create(input);
        
            // Act
            String result = template.LiquidTemplate.Render(ctx).Result;
        
            // Assert
            Assert.Equal(expected, result);
        }

        
    }
}
