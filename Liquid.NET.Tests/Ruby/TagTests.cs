//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     Source: tags.txt
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Liquid.Ruby\writetest.rb
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Liquid.NET.Constants;
using Xunit;

namespace Liquid.NET.Tests.Ruby
{
    
    public class TagTests {

        [Theory]
        [InlineData(@"{% if "" "" != empty %}NOT EMPTY{% else %}EMPTY{% endif %}", @"", @"NOT EMPTY")]
        //[InlineData(@"{% if null != empty %}NOT EMPTY{% else %}EMPTY{% endif %}", @"", @"NOT EMPTY")]
        [InlineData(@"{% assign myarray = ""1,2,3,4"" |split: "","" %}{% for item in myarray %}{% capture thecycle %}{% cycle 'odd', 'even' %}{% endcapture %}{{ thecycle }}{% endfor %}", @"", @"oddevenoddeven")]
        public void It_Should_Match_Ruby_Output(String input, String assigns, String expected) {

            // Arrange
            ITemplateContext ctx = new TemplateContext().WithAllFilters();
            
            foreach (var tuple in DictionaryFactory.CreateStringMapFromJson(assigns))
            {
                ctx.DefineLocalVariable(tuple.Item1, tuple.Item2);
            }

            
            var template = LiquidTemplate.Create(input);
            
            // Act
            String result = template.LiquidTemplate.Render(ctx).Result;
        
            // Assert
            Assert.Equal(expected, result.Trim());
        }

        
    }
}
