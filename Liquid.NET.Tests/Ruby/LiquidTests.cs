//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     Source: liquid.txt
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Liquid.Ruby\writetest.rb
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Liquid.NET.Constants;
using Xunit;

namespace Liquid.NET.Tests.Ruby
{
    
    public class LiquidTests {

        [Theory]
        //[InlineData(@"{% case a.empty? %}{% when true %}true{% when false %}false{% else %}else{% endcase %}", @"{}", @"else")]
        [InlineData(@"{{ 0.0725 | times:100 }}", @"{}", @"7.25")]
        [InlineData(@"{{ 14 | divided_by:3 }}", @"{}", @"4")]
        [InlineData(@"{% tablerow n in numbers cols:3%} {{n}} {% endtablerow %}", @"{""numbers"":[]}", @"<tr class=""row1"">
</tr>")]
        [InlineData(@"{% tablerow n in numbers cols:2%}{{tablerowloop.col}}{% endtablerow %}", @"{""numbers"":[1,2,3,4,5,6]}", @"<tr class=""row1"">
<td class=""col1"">1</td><td class=""col2"">2</td></tr>
<tr class=""row2""><td class=""col1"">1</td><td class=""col2"">2</td></tr>
<tr class=""row3""><td class=""col1"">1</td><td class=""col2"">2</td></tr>")]
//        [InlineData(@"{% tablerow char in characters cols:3 %}I WILL NOT BE OUTPUT{% endtablerow %}", @"{""characters"":""""}", @"<tr class=""row1"">
//</tr>")]
        //[InlineData(@"{{ foo }}", @"{""foo"":""#<ThingWithToLiquid:0x00000002cc0ec8>""}", @"foobar")]
        [InlineData(@"{% if true %} {% elsif false %} {% else %} {% endif %}", @"{}", @"")]
        [InlineData(@"{% for i in (1..10) %} {% endfor %}{% if true %} {% endif %}", @"{}", @"")]
        [InlineData(@"{% for i in (1..10) %}	{% endfor %}{% if true %}	{% endif %}", @"{}", @"")]
        [InlineData(@"{% for i in (1..10) %}{% unless true %} {% endunless %}{% endfor %}{% if true %}{% unless true %} {% endunless %}{% endif %}", @"{}", @"")]
        [InlineData(@"{% for i in (1..10) %} {% capture foo %} whatever {% endcapture %} {% endfor %}{% if true %} {% capture foo %} whatever {% endcapture %} {% endif %}", @"{}", @"")]
        [InlineData(@"{% for i in (1..10) %} {% endfor %}", @"{}", @"")]
        [InlineData(@"{% for i in (1..10) %}{% cycle ' ', ' ' %}{% endfor %}{% if true %}{% cycle ' ', ' ' %}{% endif %}", @"{}", @"")]
        [InlineData(@"{% for i in (1..10) %} {% assign foo = 'bar' %} {% case foo %} {% when 'bar' %} {% when 'whatever' %} {% else %} {% endcase %} {% endfor %}{% if true %} {% assign foo = 'bar' %} {% case foo %} {% when 'bar' %} {% when 'whatever' %} {% else %} {% endcase %} {% endif %}", @"{}", @"")]
        [InlineData(@"{% for i in (1..10) %} {% assign foo = 'else' %} {% case foo %} {% when 'bar' %} {% when 'whatever' %} {% else %} {% endcase %} {% endfor %}{% if true %} {% assign foo = 'else' %} {% case foo %} {% when 'bar' %} {% when 'whatever' %} {% else %} {% endcase %} {% endif %}", @"{}", @"")]
        
        //[InlineData(@"{% for i in (1..10) %} {% assign foo = 'else' %} {% case foo %} {% when 'bar' %} {% when 'whatever' %} {% else %} x {% endcase %} {% endfor %}{% if true %} {% assign foo = 'else' %} {% case foo %} {% when 'bar' %} {% when 'whatever' %} {% else %} x {% endcase %} {% endif %}", @"{}", @"x     x     x     x     x     x     x     x     x     x     x")]
        [InlineData(@"{% for i in (1..10) %}{% for i in (1..10) %} {% endfor %}{% if true %} {% endif %}{% endfor %}{% if true %}{% for i in (1..10) %} {% endfor %}{% if true %} {% endif %}{% endif %}", @"{}", @"")]
//        [InlineData(@"{% for i in (1..10) %}{% if true %} {% comment %} this is blank {% endcomment %} {% endif %}
//      {% if true %} but this is not {% endif %}{% endfor %}{% if true %}{% if true %} {% comment %} this is blank {% endcomment %} {% endif %}
//      {% if true %} but this is not {% endif %}{% endif %}", @"{}", @"but this is not 
//       but this is not 
//       but this is not 
//       but this is not 
//       but this is not 
//       but this is not 
//       but this is not 
//       but this is not 
//       but this is not 
//       but this is not 
//       but this is not")]
        [InlineData(@"{% for i in (1..10) %} {% assign foo = ""bar"" %} {% endfor %}{% if true %} {% assign foo = ""bar"" %} {% endif %}", @"{}", @"")]
        [InlineData(@"{% for i in (1..10) %}{% include 'foobar' %}{% endfor %}{% if true %}{% include 'foobar' %}{% endif %}", @"{}", @"foobarfoobarfoobarfoobarfoobarfoobarfoobarfoobarfoobarfoobarfoobar")]
        [InlineData(@"{% for i in (1..10) %}{% include ' foobar ' %}{% endfor %}{% if true %}{% include ' foobar ' %}{% endif %}", @"{}", @"foobar  foobar  foobar  foobar  foobar  foobar  foobar  foobar  foobar  foobar  foobar")]
        [InlineData(@"{% for i in (1..10) %} {% include ' ' %} {% endfor %}{% if true %} {% include ' ' %} {% endif %}", @"{}", @"")]
        [InlineData(@"{% for i in (1..10) %} {% if false %} this never happens, but still, this block is not blank {% endif %}{% endfor %}{% if true %} {% if false %} this never happens, but still, this block is not blank {% endif %}{% endif %}", @"{}", @"")]
        [InlineData(@"{% for i in (1..10) %} {% raw %} {% endraw %}{% endfor %}{% if true %} {% raw %} {% endraw %}{% endif %}", @"{}", @"")]
        [InlineData(@"{% for i in (1..10) %} {% comment %} whatever {% endcomment %} {% endfor %}{% if true %} {% comment %} whatever {% endcomment %} {% endif %}", @"{}", @"")]
        //[InlineData(@"{% for i in (1..10) %}{% foobar %}{% endfor %}", @"{}", @"")]
        [InlineData(@"{% for i in (1..10) %}     x {% endfor %}{% if true %}     x {% endif %}", @"{}", @"x      x      x      x      x      x      x      x      x      x      x")]
        [InlineData(@"{% for i in (1..10) %}{% assign foo = 0 %} {% increment foo %} {% decrement foo %}{% endfor %}{% if true %}{% assign foo = 0 %} {% increment foo %} {% decrement foo %}{% endif %}", @"{}", @"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0")]
        [InlineData(@"{% if true and true %} YES {% endif %}", @"{}", @"YES")]
        [InlineData(@"{% if false and true %} YES {% endif %}", @"{}", @"")]
        [InlineData(@"{% if false %} this text should not go into the output {% endif %}", @"{}", @"")]
        [InlineData(@"{% if true %} this text should go into the output {% endif %}", @"{}", @"this text should go into the output")]
        [InlineData(@"{% if false %} you suck {% endif %} {% if true %} you rock {% endif %}?", @"{}", @"you rock ?")]
        [InlineData(@"{% if a or b %} YES {% endif %}", @"{""a"":true,""b"":true}", @"YES")]
        [InlineData(@"{% if a or b %} YES {% endif %}", @"{""a"":true,""b"":false}", @"YES")]
        [InlineData(@"{% if a or b %} YES {% endif %}", @"{""a"":false,""b"":true}", @"YES")]
        [InlineData(@"{% if a or b %} YES {% endif %}", @"{""a"":false,""b"":false}", @"")]
        [InlineData(@"{% if a or b or c %} YES {% endif %}", @"{""a"":false,""b"":false,""c"":true}", @"YES")]
        [InlineData(@"{% if a or b or c %} YES {% endif %}", @"{""a"":false,""b"":false,""c"":false}", @"")]
        [InlineData(@"{% if a or b and c %}true{% else %}false{% endif %}", @"{""a"":true,""b"":true,""c"":true}", @"true")]
        [InlineData(@"{% if a or b and c %}true{% else %}false{% endif %}", @"{""a"":true,""b"":true,""c"":false}", @"true")]
        [InlineData(@"{% if a or b and c %}true{% else %}false{% endif %}", @"{""a"":true,""b"":false,""c"":true}", @"true")]
        [InlineData(@"{% if a or b and c %}true{% else %}false{% endif %}", @"{""a"":true,""b"":false,""c"":false}", @"true")]
        [InlineData(@"{% if a or b and c %}true{% else %}false{% endif %}", @"{""a"":false,""b"":true,""c"":true}", @"true")]
        [InlineData(@"{% if a or b and c %}true{% else %}false{% endif %}", @"{""a"":false,""b"":true,""c"":false}", @"false")]
        [InlineData(@"{% if a or b and c %}true{% else %}false{% endif %}", @"{""a"":false,""b"":false,""c"":true}", @"false")]
        [InlineData(@"{% if a or b and c %}true{% else %}false{% endif %}", @"{""a"":false,""b"":false,""c"":false}", @"false")]
        [InlineData(@"{% if var %} NO {% endif %}", @"{""var"":false}", @"")]
        [InlineData(@"{% if var %} NO {% endif %}", @"{""var"":null}", @"")]
        [InlineData(@"{% if foo.bar %} NO {% endif %}", @"{""foo"":{""bar"":false}}", @"")]
        [InlineData(@"{% if foo.bar %} NO {% endif %}", @"{""foo"":{}}", @"")]
        [InlineData(@"{% if foo.bar %} NO {% endif %}", @"{""foo"":null}", @"")]
        [InlineData(@"{% if foo.bar %} NO {% endif %}", @"{""foo"":true}", @"")]
        [InlineData(@"{% if var %} YES {% endif %}", @"{""var"":""text""}", @"YES")]
        [InlineData(@"{% if var %} YES {% endif %}", @"{""var"":true}", @"YES")]
        [InlineData(@"{% if var %} YES {% endif %}", @"{""var"":1}", @"YES")]
        [InlineData(@"{% if var %} YES {% endif %}", @"{""var"":{}}", @"YES")]
        [InlineData(@"{% if var %} YES {% endif %}", @"{""var"":[]}", @"YES")]
        [InlineData(@"{% if ""foo"" %} YES {% endif %}", @"{}", @"YES")]
        [InlineData(@"{% if foo.bar %} YES {% endif %}", @"{""foo"":{""bar"":true}}", @"YES")]
        [InlineData(@"{% if foo.bar %} YES {% endif %}", @"{""foo"":{""bar"":""text""}}", @"YES")]
        [InlineData(@"{% if foo.bar %} YES {% endif %}", @"{""foo"":{""bar"":1}}", @"YES")]
        [InlineData(@"{% if foo.bar %} YES {% endif %}", @"{""foo"":{""bar"":{}}}", @"YES")]
        [InlineData(@"{% if foo.bar %} YES {% endif %}", @"{""foo"":{""bar"":[]}}", @"YES")]
        [InlineData(@"{% if var %} NO {% else %} YES {% endif %}", @"{""var"":false}", @"YES")]
        [InlineData(@"{% if var %} NO {% else %} YES {% endif %}", @"{""var"":null}", @"YES")]
        [InlineData(@"{% if var %} YES {% else %} NO {% endif %}", @"{""var"":true}", @"YES")]
        [InlineData(@"{% if ""foo"" %} YES {% else %} NO {% endif %}", @"{""var"":""text""}", @"YES")]
        [InlineData(@"{% if foo.bar %} NO {% else %} YES {% endif %}", @"{""foo"":{""bar"":false}}", @"YES")]
        [InlineData(@"{% if foo.bar %} YES {% else %} NO {% endif %}", @"{""foo"":{""bar"":true}}", @"YES")]
        [InlineData(@"{% if foo.bar %} YES {% else %} NO {% endif %}", @"{""foo"":{""bar"":""text""}}", @"YES")]
        [InlineData(@"{% if foo.bar %} NO {% else %} YES {% endif %}", @"{""foo"":{""notbar"":true}}", @"YES")]
        [InlineData(@"{% if foo.bar %} NO {% else %} YES {% endif %}", @"{""foo"":{}}", @"YES")]
        [InlineData(@"{% if foo.bar %} NO {% else %} YES {% endif %}", @"{""notfoo"":{""bar"":true}}", @"YES")]
        [InlineData(@"{% if 'bob' contains 'o' %}yes{% endif %}", @"{}", @"yes")]
        [InlineData(@"{% if 'bob' contains 'f' %}yes{% else %}no{% endif %}", @"{}", @"no")]
        [InlineData(@"{% if android.name == 'Roy' %}YES{% endif %}", @"{""order"":{""items_count"":0},""android"":{""name"":""Roy""}}", @"YES")]
        [InlineData(@"{% if order.items_count == 0 %}YES{% endif %}", @"{""order"":{""items_count"":0},""android"":{""name"":""Roy""}}", @"YES")]
        [InlineData(@"{% if 'gnomeslab-and-or-liquid' contains 'gnomeslab-and-or-liquid' %}yes{% endif %}", @"{}", @"yes")]
        [InlineData(@"{% if false %}{% if false %} NO {% endif %}{% endif %}", @"{}", @"")]
        [InlineData(@"{% if false %}{% if true %} NO {% endif %}{% endif %}", @"{}", @"")]
        [InlineData(@"{% if true %}{% if false %} NO {% endif %}{% endif %}", @"{}", @"")]
        [InlineData(@"{% if true %}{% if true %} YES {% endif %}{% endif %}", @"{}", @"YES")]
        [InlineData(@"{% if true %}{% if true %} YES {% else %} NO {% endif %}{% else %} NO {% endif %}", @"{}", @"YES")]
        [InlineData(@"{% if true %}{% if false %} NO {% else %} YES {% endif %}{% else %} NO {% endif %}", @"{}", @"YES")]
        [InlineData(@"{% if false %}{% if true %} NO {% else %} NONO {% endif %}{% else %} YES {% endif %}", @"{}", @"YES")]
        [InlineData(@"{% if false %} NO {% else %} YES {% endif %}", @"{}", @"YES")]
        [InlineData(@"{% if true %} YES {% else %} NO {% endif %}", @"{}", @"YES")]
        [InlineData(@"{% if ""foo"" %} YES {% else %} NO {% endif %}", @"{}", @"YES")]
        [InlineData(@"{% if null < 10 %} NO {% endif %}", @"{}", @"")]
        [InlineData(@"{% if null <= 10 %} NO {% endif %}", @"{}", @"")]
        [InlineData(@"{% if null >= 10 %} NO {% endif %}", @"{}", @"")]
        [InlineData(@"{% if null > 10 %} NO {% endif %}", @"{}", @"")]
        [InlineData(@"{% if 10 < null %} NO {% endif %}", @"{}", @"")]
        [InlineData(@"{% if 10 <= null %} NO {% endif %}", @"{}", @"")]
        [InlineData(@"{% if 10 >= null %} NO {% endif %}", @"{}", @"")]
        [InlineData(@"{% if 10 > null %} NO {% endif %}", @"{}", @"")]
        [InlineData(@"{% if 0 == 0 %}0{% elsif 1 == 1%}1{% else %}2{% endif %}", @"{}", @"0")]
        [InlineData(@"{% if 0 != 0 %}0{% elsif 1 == 1%}1{% else %}2{% endif %}", @"{}", @"1")]
        [InlineData(@"{% if 0 != 0 %}0{% elsif 1 != 1%}1{% else %}2{% endif %}", @"{}", @"2")]
        [InlineData(@"{% if false %}if{% elsif true %}elsif{% endif %}", @"{}", @"elsif")]
        [InlineData(@"{% if a == true or b == true %} YES {% endif %}", @"{""a"":true,""b"":true}", @"YES")]
        [InlineData(@"{% if a == true or b == false %} YES {% endif %}", @"{""a"":true,""b"":true}", @"YES")]
        [InlineData(@"{% if a == false or b == false %} YES {% endif %}", @"{""a"":true,""b"":true}", @"")]
        [InlineData(@"{% if a == 'and' and b == 'or' and c == 'foo and bar' and d == 'bar or baz' and e == 'foo' and foo and bar %} YES {% endif %}", @"{""a"":""and"",""b"":""or"",""c"":""foo and bar"",""d"":""bar or baz"",""e"":""foo"",""foo"":true,""bar"":true}", @"YES")]
        [InlineData(@"{% assign v = false %}{% if v %} YES {% else %} NO {% endif %}", @"{}", @"NO")]
        [InlineData(@"{% assign v = nil %}{% if v == nil %} YES {% else %} NO {% endif %}", @"{}", @"YES")]
        [InlineData(@"{% for i in array.items %}{% continue %}{% endfor %}", @"{""array"":{""items"":[1,2,3,4,5]}}", @"")]
        [InlineData(@"{% for i in array.items %}{{ i }}{% continue %}{% endfor %}", @"{""array"":{""items"":[1,2,3,4,5]}}", @"12345")]
        [InlineData(@"{% for i in array.items %}{% continue %}{{ i }}{% endfor %}", @"{""array"":{""items"":[1,2,3,4,5]}}", @"")]
        [InlineData(@"{% for i in array.items %}{% if i > 3 %}{% continue %}{% endif %}{{ i }}{% endfor %}", @"{""array"":{""items"":[1,2,3,4,5]}}", @"123")]
        [InlineData(@"{% for i in array.items %}{% if i == 3 %}{% continue %}{% else %}{{ i }}{% endif %}{% endfor %}", @"{""array"":{""items"":[1,2,3,4,5]}}", @"1245")]
        [InlineData(@"{% for item in array %}{% for i in item %}{% if i == 1 %}{% continue %}{% endif %}{{ i }}{% endfor %}{% endfor %}", @"{""array"":[[1,2],[3,4],[5,6]]}", @"23456")]
        [InlineData(@"{% for i in array.items %}{% if i == 9999 %}{% continue %}{% endif %}{{ i }}{% endfor %}", @"{""array"":{""items"":[1,2,3,4,5]}}", @"12345")]
        //[InlineData(@"{% for char in characters %}I WILL NOT BE OUTPUT{% endfor %}", @"{""characters"":""""}", @"")]
//        [InlineData(@"{%for i in array.items limit:3 %}{{i}}{%endfor%}
//      next
//      {%for i in array.items offset:continue limit:3 %}{{i}}{%endfor%}
//      next
//      {%for i in array.items offset:continue limit:3 offset:1000 %}{{i}}{%endfor%}", @"{""array"":{""items"":[1,2,3,4,5,6,7,8,9,0]}}", @"123
//      next
//      456
//      next")]
        [InlineData(@"{%for item in array%}+{%else%}-{%endfor%}", @"{""array"":[1,2,3]}", @"+++")]
        [InlineData(@"{%for item in array%}+{%else%}-{%endfor%}", @"{""array"":[]}", @"-")]
        [InlineData(@"{%for item in array%}+{%else%}-{%endfor%}", @"{""array"":null}", @"-")]
//        [InlineData(@"{% for item in items %}{{item}}{% endfor %}", @"{""items"":[""@data""]}", @"12345")]
        [InlineData(@"{%for i in array offset:7 %}{{ i }}{%endfor%}", @"{""array"":[1,2,3,4,5,6,7,8,9,0]}", @"890")]
        //[InlineData(@"{% for a in (1..2) %}o{% for b in empty %}{% endfor %}{% endfor %}", @"{}", @"oo")]
        //[InlineData(@"{%for i in array limit: limit offset: offset %}{{ i }}{%endfor%}", @"{""array"":[1,2,3,4,5,6,7,8,9,0],""limit"":2,""offset"":2}", @"34")]
        [InlineData(@"{%for i in array limit: x offset: y %}{{ i }}{%endfor%}", @"{""array"":[1,2,3,4,5,6,7,8,9,0],""x"":2,""y"":2}", @"34")]
        [InlineData(@"{%for item in array%}{%for i in item%}{{ i }}{%endfor%}{%endfor%}", @"{""array"":[[1,2],[3,4],[5,6]]}", @"123456")]
        [InlineData(@"{% for inner in outer %}{{ forloop.parentloop.index }}.{{ forloop.index }} {% endfor %}", @"{""outer"":[[1,1,1],[1,1,1]]}", @".1 .2")]
        [InlineData(@"{% for       item   in   items %}{{item}}{% endfor %}", @"{""items"":[1,2,3,4,5]}", @"12345")]
        [InlineData(@"{% for i in array.items %}{% break %}{% endfor %}", @"{""array"":{""items"":[1,2,3,4,5,6,7,8,9,10]}}", @"")]
        [InlineData(@"{% for i in array.items %}{{ i }}{% break %}{% endfor %}", @"{""array"":{""items"":[1,2,3,4,5,6,7,8,9,10]}}", @"1")]
        [InlineData(@"{% for i in array.items %}{% break %}{{ i }}{% endfor %}", @"{""array"":{""items"":[1,2,3,4,5,6,7,8,9,10]}}", @"")]
        [InlineData(@"{% for i in array.items %}{{ i }}{% if i > 3 %}{% break %}{% endif %}{% endfor %}", @"{""array"":{""items"":[1,2,3,4,5,6,7,8,9,10]}}", @"1234")]
        [InlineData(@"{% for item in array %}{% for i in item %}{% if i == 1 %}{% break %}{% endif %}{{ i }}{% endfor %}{% endfor %}", @"{""array"":[[1,2],[3,4],[5,6]]}", @"3456")]
        [InlineData(@"{% for i in array.items %}{% if i == 9999 %}{% break %}{% endif %}{{ i }}{% endfor %}", @"{""array"":{""items"":[1,2,3,4,5]}}", @"12345")]
        //[InlineData(@"{%for item in (1..foobar.value) %} {{item}} {%endfor%}", @"{""foobar"":[]}", @"1  2  3")]
        [InlineData(@"{%for item in (1..foobar.value) %} {{item}} {%endfor%}", @"{""foobar"":{""value"":3}}", @"1  2  3")]
        [InlineData(@"{%for item in array%} yo {%endfor%}", @"{""array"":[1,2,3,4]}", @"yo  yo  yo  yo")]
        [InlineData(@"{%for item in array%}yo{%endfor%}", @"{""array"":[1,2]}", @"yoyo")]
        [InlineData(@"{%for item in array%} yo {%endfor%}", @"{""array"":[1]}", @"yo")]
        [InlineData(@"{%for item in array%}{%endfor%}", @"{""array"":[1,2]}", @"")]
        [InlineData(@"{%for item in array%}
  yo
{%endfor%}", @"{""array"":[1,2,3]}", @"yo

  yo

  yo")]
        [InlineData(@"{%for val in string%}{{val}}{%endfor%}", @"{""string"":""test string""}", @"test string")]
        [InlineData(@"{%for val in string limit:1%}{{val}}{%endfor%}", @"{""string"":""test string""}", @"test string")]
        [InlineData(@"{%for val in string%}{{forloop.name}}-{{forloop.index}}-{{forloop.length}}-{{forloop.index0}}-{{forloop.rindex}}-{{forloop.rindex0}}-{{forloop.first}}-{{forloop.last}}-{{val}}{%endfor%}", @"{""string"":""test string""}", @"val-string-1-1-0-1-0-true-true-test string")]
        [InlineData(@"{%for item in array%} {{forloop.index}}/{{forloop.length}} {%endfor%}", @"{""array"":[1,2,3]}", @"1/3  2/3  3/3")]
        [InlineData(@"{%for item in array%} {{forloop.index}} {%endfor%}", @"{""array"":[1,2,3]}", @"1  2  3")]
        [InlineData(@"{%for item in array%} {{forloop.index0}} {%endfor%}", @"{""array"":[1,2,3]}", @"0  1  2")]
        [InlineData(@"{%for item in array%} {{forloop.rindex0}} {%endfor%}", @"{""array"":[1,2,3]}", @"2  1  0")]
        [InlineData(@"{%for item in array%} {{forloop.rindex}} {%endfor%}", @"{""array"":[1,2,3]}", @"3  2  1")]
        [InlineData(@"{%for item in array%} {{forloop.first}} {%endfor%}", @"{""array"":[1,2,3]}", @"true  false  false")]
        [InlineData(@"{%for item in array%} {{forloop.last}} {%endfor%}", @"{""array"":[1,2,3]}", @"false  false  true")]
        [InlineData(@"{% for inner in outer %}{% for k in inner %}{{ forloop.parentloop.index }}.{{ forloop.index }} {% endfor %}{% endfor %}", @"{""outer"":[[1,1,1],[1,1,1]]}", @"1.1 1.2 1.3 2.1 2.2 2.3")]
        [InlineData(@"{%for item in array%} {{item}} {%endfor%}", @"{""array"":[1,2,3]}", @"1  2  3")]
        [InlineData(@"{%for item in array%}{{item}}{%endfor%}", @"{""array"":[1,2,3]}", @"123")]
        [InlineData(@"{% for item in array %}{{item}}{% endfor %}", @"{""array"":[1,2,3]}", @"123")]
        [InlineData(@"{%for item in array%}{{item}}{%endfor%}", @"{""array"":[""a"",""b"",""c"",""d""]}", @"abcd")]
        [InlineData(@"{%for item in array%}{{item}}{%endfor%}", @"{""array"":[""a"","" "",""b"","" "",""c""]}", @"a b c")]
        [InlineData(@"{%for item in array%}{{item}}{%endfor%}", @"{""array"":[""a"","""",""b"","""",""c""]}", @"abc")]
//        [InlineData(@"{% for item in items limit:1 %}{{item}}{% endfor %}", @"{""items"":[""@data""]}", @"1")]
//        [InlineData(@"{%for i in array.items limit:3 %}{{i}}{%endfor%}
//      next
//      {%for i in array.items offset:continue limit:3 %}{{i}}{%endfor%}
//      next
//      {%for i in array.items offset:continue limit:1000 %}{{i}}{%endfor%}", @"{""array"":{""items"":[1,2,3,4,5,6,7,8,9,0]}}", @"123
//      next
//      456
//      next
//      7890")]
//        [InlineData(@"{% for item in items offset:2 limit:2 %}{{item}}{% endfor %}", @"{""items"":[""@data""]}", @"34")]
        [InlineData(@"{% for item in items offset:2 limit:2 %}{{item}}{% endfor %}", @"{""items"":[1,2,3,4,5]}", @"34")]
        [InlineData(@"{%for i in array limit:2 %}{{ i }}{%endfor%}", @"{""array"":[1,2,3,4,5,6,7,8,9,0]}", @"12")]
        [InlineData(@"{%for i in array limit:4 %}{{ i }}{%endfor%}", @"{""array"":[1,2,3,4,5,6,7,8,9,0]}", @"1234")]
        [InlineData(@"{%for i in array limit:4 offset:2 %}{{ i }}{%endfor%}", @"{""array"":[1,2,3,4,5,6,7,8,9,0]}", @"3456")]
        [InlineData(@"{%for i in array limit: 4 offset: 2 %}{{ i }}{%endfor%}", @"{""array"":[1,2,3,4,5,6,7,8,9,0]}", @"3456")]
        [InlineData(@"{%for item in array%}{% if forloop.first %}+{% else %}-{% endif %}{%endfor%}", @"{""array"":[1,2,3]}", @"+--")]
        [InlineData(@"{%for item in array reversed %}{{item}}{%endfor%}", @"{""array"":[1,2,3]}", @"321")]
//        [InlineData(@"{%for i in array.items limit: 3 %}{{i}}{%endfor%}
//      next
//      {%for i in array.items offset:continue limit: 3 %}{{i}}{%endfor%}
//      next
//      {%for i in array.items offset:continue limit: 3 %}{{i}}{%endfor%}", @"{""array"":{""items"":[1,2,3,4,5,6,7,8,9,0]}}", @"123
//      next
//      456
//      next
//      789")]
        [InlineData(@"{%for item in (1..3) %} {{item}} {%endfor%}", @"{}", @"1  2  3")]
        //[InlineData(@"{% for item in items offset:2 limit:2 %}{{item}}{% endfor %}", @"{""items"":[""@data""]}", @"34")]
        [InlineData(@"{%for item in (1..foobar) %} {{item}} {%endfor%}", @"{""foobar"":3}", @"1  2  3")]
//        [InlineData(@"{%for i in array.items limit:3 %}{{i}}{%endfor%}
//      next
//      {%for i in array.items offset:continue limit:3 %}{{i}}{%endfor%}
//      next
//      {%for i in array.items offset:continue limit:1 %}{{i}}{%endfor%}", @"{""array"":{""items"":[1,2,3,4,5,6,7,8,9,0]}}", @"123
//      next
//      456
//      next
//      7")]
        [InlineData(@"{% if true == empty %}?{% endif %}", @"{}", @"")]
        [InlineData(@"{% if true == null %}?{% endif %}", @"{}", @"")]
        [InlineData(@"{% if empty == true %}?{% endif %}", @"{}", @"")]
        [InlineData(@"{% if null == true %}?{% endif %}", @"{}", @"")]
        [InlineData(@"{%assign var2 = var[""a:b c""].paged %}var2: {{var2}}", @"{""var"":{""a:b c"":{""paged"":""1""}}}", @"var2: 1")]
        [InlineData(@"{% case a.size %}{% when 1 %}1{% when 2 %}2{% endcase %}", @"{""a"":[]}", @"")]
        [InlineData(@"{% case a.size %}{% when 1 %}1{% when 2 %}2{% endcase %}", @"{""a"":[1]}", @"1")]
        [InlineData(@"{% case a.size %}{% when 1 %}1{% when 2 %}2{% endcase %}", @"{""a"":[1,1]}", @"2")]
        [InlineData(@"{% case a.size %}{% when 1 %}1{% when 2 %}2{% endcase %}", @"{""a"":[1,1,1]}", @"")]
        [InlineData(@"{% case a.size %}{% when 1 %}1{% when 2 %}2{% endcase %}", @"{""a"":[1,1,1,1]}", @"")]
        [InlineData(@"{% case a.size %}{% when 1 %}1{% when 2 %}2{% endcase %}", @"{""a"":[1,1,1,1,1]}", @"")]
        [InlineData(@"var2:{{var2}} {%assign var2 = var%} var2:{{var2}}", @"{""var"":""content""}", @"var2:  var2:content")]
        [InlineData(@"{%for i in (1..2) %}{% assign a = ""variable""%}{% endfor %}{{a}}", @"{}", @"variable")]
        [InlineData(@"{% case a.size %}{% when 1 %}1{% when 2 %}2{% else %}else{% endcase %}", @"{""a"":[]}", @"else")]
        [InlineData(@"{% case a.size %}{% when 1 %}1{% when 2 %}2{% else %}else{% endcase %}", @"{""a"":[1]}", @"1")]
        [InlineData(@"{% case a.size %}{% when 1 %}1{% when 2 %}2{% else %}else{% endcase %}", @"{""a"":[1,1]}", @"2")]
        [InlineData(@"{% case a.size %}{% when 1 %}1{% when 2 %}2{% else %}else{% endcase %}", @"{""a"":[1,1,1]}", @"else")]
        [InlineData(@"{% case a.size %}{% when 1 %}1{% when 2 %}2{% else %}else{% endcase %}", @"{""a"":[1,1,1,1]}", @"else")]
        [InlineData(@"{% case a.size %}{% when 1 %}1{% when 2 %}2{% else %}else{% endcase %}", @"{""a"":[1,1,1,1,1]}", @"else")]
        [InlineData(@"{{ var2 }}{% capture var2 %}{{ var }} foo {% endcapture %}{{ var2 }}{{ var2 }}", @"{""var"":""content""}", @"content foo content foo")]
        [InlineData(@"the comment block should be removed {%comment%} be gone.. {%endcomment%} .. right?", @"{}", @"the comment block should be removed  .. right?")]
        [InlineData(@"{%comment%}{%endcomment%}", @"{}", @"")]
        [InlineData(@"{%comment%}{% endcomment %}", @"{}", @"")]
        [InlineData(@"{% comment %}{%endcomment%}", @"{}", @"")]
        [InlineData(@"{% comment %}{% endcomment %}", @"{}", @"")]
        [InlineData(@"{%comment%}comment{%endcomment%}", @"{}", @"")]
        [InlineData(@"{% comment %}comment{% endcomment %}", @"{}", @"")]
        [InlineData(@"{% comment %} 1 {% comment %} 2 {% endcomment %} 3 {% endcomment %}", @"{}", @"")]
        [InlineData(@"{%comment%}{%blabla%}{%endcomment%}", @"{}", @"")]
        [InlineData(@"{% comment %}{% blabla %}{% endcomment %}", @"{}", @"")]
        [InlineData(@"{%comment%}{% endif %}{%endcomment%}", @"{}", @"")]
        [InlineData(@"{% comment %}{% endwhatever %}{% endcomment %}", @"{}", @"")]
        //[InlineData(@"{% comment %}{% raw %} {{%%%%}}  }} { {% endcomment %} {% comment {% endraw %} {% endcomment %}", @"{}", @"")]
        [InlineData(@"foo{%comment%}comment{%endcomment%}bar", @"{}", @"foobar")]
        [InlineData(@"foo{% comment %}comment{% endcomment %}bar", @"{}", @"foobar")]
        [InlineData(@"foo{%comment%} comment {%endcomment%}bar", @"{}", @"foobar")]
        [InlineData(@"foo{% comment %} comment {% endcomment %}bar", @"{}", @"foobar")]
        [InlineData(@"foo {%comment%} {%endcomment%} bar", @"{}", @"foo  bar")]
        [InlineData(@"foo {%comment%}comment{%endcomment%} bar", @"{}", @"foo  bar")]
        [InlineData(@"foo {%comment%} comment {%endcomment%} bar", @"{}", @"foo  bar")]
        [InlineData(@"foo{%comment%}
                                     {%endcomment%}bar", @"{}", @"foobar")]
        [InlineData(@"{%cycle ""one"", ""two""%}", @"{}", @"one")]
        [InlineData(@"{%cycle ""one"", ""two""%} {%cycle ""one"", ""two""%}", @"{}", @"one two")]
        [InlineData(@"{%cycle """", ""two""%} {%cycle """", ""two""%}", @"{}", @"two")]
        [InlineData(@"{%cycle ""one"", ""two""%} {%cycle ""one"", ""two""%} {%cycle ""one"", ""two""%}", @"{}", @"one two one")]
        [InlineData(@"{%cycle ""text-align: left"", ""text-align: right"" %} {%cycle ""text-align: left"", ""text-align: right""%}", @"{}", @"text-align: left text-align: right")]
        [InlineData(@"{% assign a = ""variable""%}{{a}}", @"{}", @"variable")]
        [InlineData(@"{% case condition %}{% when 1 or 2 or 3 %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":1}", @"its 1 or 2 or 3")]
        [InlineData(@"{% case condition %}{% when 1 or 2 or 3 %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":2}", @"its 1 or 2 or 3")]
        [InlineData(@"{% case condition %}{% when 1 or 2 or 3 %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":3}", @"its 1 or 2 or 3")]
        [InlineData(@"{% case condition %}{% when 1 or 2 or 3 %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":4}", @"its 4")]
        [InlineData(@"{% case condition %}{% when 1 or 2 or 3 %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":5}", @"")]
        [InlineData(@"{% case condition %}{% when 1 or ""string"" or null %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":1}", @"its 1 or 2 or 3")]
        [InlineData(@"{% case condition %}{% when 1 or ""string"" or null %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":""string""}", @"its 1 or 2 or 3")]
        [InlineData(@"{% case condition %}{% when 1 or ""string"" or null %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":null}", @"its 1 or 2 or 3")]
        [InlineData(@"{% case condition %}{% when 1 or ""string"" or null %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":""something else""}", @"")]
        [InlineData(@"{%cycle 1: ""one"", ""two"" %} {%cycle 2: ""one"", ""two"" %} {%cycle 1: ""one"", ""two"" %} {%cycle 2: ""one"", ""two"" %} {%cycle 1: ""one"", ""two"" %} {%cycle 2: ""one"", ""two"" %}", @"{}", @"one one two two one one")]
        [InlineData(@"{% case condition %}{% when 1 %} its 1 {% when 2 %} its 2 {% endcase %}", @"{""condition"":2}", @"its 2")]
        [InlineData(@"{% case condition %}{% when 1 %} its 1 {% when 2 %} its 2 {% endcase %}", @"{""condition"":1}", @"its 1")]
        [InlineData(@"{% case condition %}{% when 1 %} its 1 {% when 2 %} its 2 {% endcase %}", @"{""condition"":3}", @"")]
        [InlineData(@"{% case condition %}{% when ""string here"" %} hit {% endcase %}", @"{""condition"":""string here""}", @"hit")]
        [InlineData(@"{% case condition %}{% when ""string here"" %} hit {% endcase %}", @"{""condition"":""bad string here""}", @"")]
        [InlineData(@"{% assign a = """"%}{{a}}", @"{}", @"")]
        //[InlineData(@"a-b:{{a-b}} {%assign a-b = 2 %}a-b:{{a-b}}", @"{""a-b"":""1""}", @"a-b:1 a-b:2")]
        [InlineData(@"{%for item in array%}{%ifchanged%}{{item}}{% endifchanged %}{%endfor%}", @"{""array"":[1,1,2,2,3,3]}", @"123")]
        [InlineData(@"{%for item in array%}{%ifchanged%}{{item}}{% endifchanged %}{%endfor%}", @"{""array"":[1,1,1,1]}", @"1")]

        [InlineData(@"{% case false %}{% when true %}true{% when false %}false{% else %}else{% endcase %}", @"{}", @"false")]
        [InlineData(@"{% case true %}{% when true %}true{% when false %}false{% else %}else{% endcase %}", @"{}", @"true")]
        [InlineData(@"{% case NULL %}{% when true %}true{% when false %}false{% else %}else{% endcase %}", @"{}", @"else")]
        [InlineData(@"0{%
for i in (1..3)
%} {{
i
}}{%
endfor
%}", @"{}", @"0 1 2 3")]
        [InlineData(@"{% case condition %}{% when 1, 2, 3 %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":1}", @"its 1 or 2 or 3")]
        [InlineData(@"{% case condition %}{% when 1, 2, 3 %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":2}", @"its 1 or 2 or 3")]
        [InlineData(@"{% case condition %}{% when 1, 2, 3 %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":3}", @"its 1 or 2 or 3")]
        [InlineData(@"{% case condition %}{% when 1, 2, 3 %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":4}", @"its 4")]
        [InlineData(@"{% case condition %}{% when 1, 2, 3 %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":5}", @"")]
        [InlineData(@"{% case condition %}{% when 1, ""string"", null %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":1}", @"its 1 or 2 or 3")]
        [InlineData(@"{% case condition %}{% when 1, ""string"", null %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":""string""}", @"its 1 or 2 or 3")]
        [InlineData(@"{% case condition %}{% when 1, ""string"", null %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":null}", @"its 1 or 2 or 3")]
        [InlineData(@"{% case condition %}{% when 1, ""string"", null %} its 1 or 2 or 3 {% when 4 %} its 4 {% endcase %}", @"{""condition"":""something else""}", @"")]
        [InlineData(@"this text should come out of the template without change...", @"{}", @"this text should come out of the template without change...")]
        [InlineData(@"blah", @"{}", @"blah")]
        [InlineData(@"<blah>", @"{}", @"<blah>")]
        [InlineData(@"|,.:", @"{}", @"|,.:")]
        [InlineData(@"", @"{}", @"")]
        [InlineData(@"this shouldnt see any transformation either but has multiple lines
              as you can clearly see here ...", @"{}", @"this shouldnt see any transformation either but has multiple lines
              as you can clearly see here ...")]
        [InlineData(@"{% case condition %}{% when 5 %} hit {% else %} else {% endcase %}", @"{""condition"":5}", @"hit")]
        [InlineData(@"{% case condition %}{% when 5 %} hit {% else %} else {% endcase %}", @"{""condition"":6}", @"else")]
        [InlineData(@"{% case condition %} {% when 5 %} hit {% else %} else {% endcase %}", @"{""condition"":6}", @"else")]
        [InlineData(@"{%cycle var1: ""one"", ""two"" %} {%cycle var2: ""one"", ""two"" %} {%cycle var1: ""one"", ""two"" %} {%cycle var2: ""one"", ""two"" %} {%cycle var1: ""one"", ""two"" %} {%cycle var2: ""one"", ""two"" %}", @"{""var1"":1,""var2"":2}", @"one one two two one one")]
        [InlineData(@"array has {{ array.size }} elements", @"{""array"":[1,2,3,4]}", @"array has 4 elements")]
        [InlineData(@"{%cycle 1,2%} {%cycle 1,2%} {%cycle 1,2%} {%cycle 1,2,3%} {%cycle 1,2,3%} {%cycle 1,2,3%} {%cycle 1,2,3%}", @"{}", @"1 2 1 1 2 3 1")]
        [InlineData(@"hash has {{ hash.size }} elements", @"{""hash"":{""a"":1,""b"":2,""c"":3,""d"":4}}", @"hash has 4 elements")]
        [InlineData(@"{% include 'locale_variables' echo1: echo1, echo2: more_echos.echo2 %}", @"{""echo1"":""test123"",""more_echos"":{""echo2"":""test321""}}", @"Locale: test123 test321")]
        [InlineData(@"{% include template %}", @"{""template"":""Test123""}", @"Test123")]
        [InlineData(@"{% include template %}", @"{""template"":""Test321""}", @"Test321")]
        [InlineData(@"{% include template for product %}", @"{""template"":""product"",""product"":{""title"":""Draft 151cm""}}", @"Product: Draft 151cm")]
        [InlineData(@"{% include 'locale_variables' echo1: 'test123' %}", @"{}", @"Locale: test123")]
        [InlineData(@"{% include 'body' %}", @"{}", @"body body_detail")]
        [InlineData(@"{% include 'nested_template' %}", @"{}", @"header body body_detail footer")]
        [InlineData(@"{% include 'product' %}", @"{""product"":{""title"":""Draft 151cm""}}", @"Product: Draft 151cm")]
        [InlineData(@"{% include 'locale_variables' echo1: 'test123', echo2: 'test321' %}", @"{}", @"Locale: test123 test321")]
        [InlineData(@"{% if true %}{% include 'foo_if_true' %}{% endif %}", @"{}", @"foo_if_true")]
        [InlineData(@"{% include 'assignments' %}{{ foo }}", @"{}", @"bar")]
        [InlineData(@"{% include 'product' with products[0] %}", @"{""products"":[{""title"":""Draft 151cm""},{""title"":""Element 155cm""}]}", @"Product: Draft 151cm")]
        [InlineData(@"{% include 'nested_product_template' with product %}", @"{""product"":{""title"":""Draft 151cm""}}", @"Product: Draft 151cm details")]
        [InlineData(@"{% include 'nested_product_template' for products %}", @"{""products"":[{""title"":""Draft 151cm""},{""title"":""Element 155cm""}]}", @"Product: Draft 151cm details Product: Element 155cm details")]
        [InlineData(@"{% include 'product' for products %}", @"{""products"":[{""title"":""Draft 151cm""},{""title"":""Element 155cm""}]}", @"Product: Draft 151cm Product: Element 155cm")]
        [InlineData(@"{% assign page = 'pick_a_source' %}{% include page %}", @"{}", @"from TestFileSystem")]
        [InlineData(@"{% assign page = 'product' %}{% include page %}", @"{""product"":{""title"":""Draft 151cm""}}", @"Product: Draft 151cm")]
        [InlineData(@"{% assign page = 'product' %}{% include page for foo %}", @"{""foo"":{""title"":""Draft 151cm""}}", @"Product: Draft 151cm")]
        [InlineData(@"{% raw %}{% comment %} test {% endcomment %}{% endraw %}", @"{}", @"{% comment %} test {% endcomment %}")]
        [InlineData(@"{% raw %} Foobar {% invalid {% endraw %}", @"{}", @"Foobar {% invalid")]
        [InlineData(@"{% raw %} Foobar invalid %} {% endraw %}", @"{}", @"Foobar invalid %}")]
        [InlineData(@"{% raw %} Foobar {{ invalid {% endraw %}", @"{}", @"Foobar {{ invalid")]
        [InlineData(@"{% raw %} Foobar invalid }} {% endraw %}", @"{}", @"Foobar invalid }}")]
        [InlineData(@"{% raw %} Foobar {% invalid {% {% endraw {% endraw %}", @"{}", @"Foobar {% invalid {% {% endraw")]
        [InlineData(@"{% raw %} Foobar {% {% {% {% endraw %}", @"{}", @"Foobar {% {% {%")]
        [InlineData(@"{% raw %} test {% raw %} {% {% endraw %}endraw %}", @"{}", @"test {% raw %} {% endraw %}")]
        [InlineData(@"{% raw %} Foobar {{ invalid {% endraw %}{{ 1 }}", @"{}", @"Foobar {{ invalid 1")]
        [InlineData(@"{% raw %}{{ test }}{% endraw %}", @"{}", @"{{ test }}")]
        //[InlineData(@"{% continue %}", @"{}", @"")]
        //[InlineData(@"{% capture 'var' %}test string{% endcapture %}{{var}}", @"{}", @"test string")]
        [InlineData(@"{% unless true %} NO {% else %} YES {% endunless %}", @"{}", @"YES")]
        [InlineData(@"{% unless false %} YES {% else %} NO {% endunless %}", @"{}", @"YES")]
        [InlineData(@"{% unless ""foo"" %} NO {% else %} YES {% endunless %}", @"{}", @"YES")]
        [InlineData(@"{% unless true %} this text should not go into the output {% endunless %}", @"{}", @"")]
        [InlineData(@"{% unless false %} this text should go into the output {% endunless %}", @"{}", @"this text should go into the output")]
        [InlineData(@"{% unless true %} you suck {% endunless %} {% unless false %} you rock {% endunless %}?", @"{}", @"you rock ?")]
        [InlineData(@"{% for i in choices %}{% unless i %} {{ forloop.index }} {% else %} TRUE {% endunless %}{% endfor %}", @"{""choices"":[1,null,false]}", @"TRUE  2  3")]
        [InlineData(@"{% for i in choices %}{% unless i %}{{ forloop.index }}{% endunless %}{% endfor %}", @"{""choices"":[1,null,false]}", @"23")]
        [InlineData(@"{% if a == 'foo' or (b == 'bar' and c == 'baz') or false %} YES {% endif %}", @"{""b"":""bar"",""c"":""baz""}", @"YES")]
        //[InlineData(@"{% assign 123foo = 'bar' %}{{ 123foo }}", @"{}", @"bar")]
        //[InlineData(@"{% assign 123 = 'bar' %}{{ 123 }}", @"{}", @"123")]
        //[InlineData(@"{% if true && false %} YES {% endif %}", @"{}", @"YES")]
        //[InlineData(@"{% if false || true %} YES {% endif %}", @"{}", @"")]
        //[InlineData(@"{% for i in (1...5) %}{{ i }}{% endfor %}", @"{}", @"12345")]
        //[InlineData(@"{{ 'hi there' | split$$$:' ' | first }}", @"{}", @"hi")]
        //[InlineData(@"{{ 'X' | downcase) }}", @"{}", @"x")]
        //[InlineData(@"{{ 'hi there' | split:""t"""" | reverse | first}}", @"{}", @"here")]
        //[InlineData(@"{{ 'hi there' | split:""t"""" | remove:""i"" | first}}", @"{}", @"hi")]
        //[InlineData(@"{{ foo | map: ""whatever"" }}", @"{""foo"":[""woot: 0""]}", @"woot: 1")]
        [InlineData(@"{{ 3 | modulo:2 }}", @"{}", @"1")]
        //[InlineData(@"{{ ary | map:'foo' | map:'bar' }}", @"{""ary"":[{""foo"":{""bar"":""a""}},{""foo"":{""bar"":""b""}},{""foo"":{""bar"":""c""}}]}", @"abc")]
        [InlineData(@"{{ source | strip_newlines }}", @"{""source"":""a\nb\nc""}", @"abc")]
        [InlineData(@"{{ source | strip_newlines }}", @"{""source"":""a\r\nb\nc""}", @"abc")]
        //[InlineData(@"{{ thing | map: ""foo"" | map: ""bar"" }}", @"{""thing"":{""foo"":[{""bar"":42},{""bar"":17}]}}", @"4217")]
        [InlineData(@"{{ 'foo|bar' | remove: '|' }}", @"{}", @"foobar")]
        [InlineData(@"{{ source | strip }}", @"{""source"":"" ab c  ""}", @"ab c")]
        [InlineData(@"{{ source | strip }}", @"{""source"":"" \tab c  \n \t""}", @"ab c")]
        [InlineData(@"{{ 1 | plus:1 }}", @"{}", @"2")]
        [InlineData(@"{{ '1' | plus:'1.0' }}", @"{}", @"2.0")]
        //[InlineData(@"{{ foo | sort: ""bar"" | map: ""foo"" }}", @"{""foo"":[]}", @"213")]
        [InlineData(@"{{ input | floor }}", @"{""input"":4.6}", @"4")]
        [InlineData(@"{{ '4.3' | floor }}", @"{}", @"4")]
        //[InlineData(@"{{ foo | map: ""foo"" }}", @"{""foo"":[]}", @"123")]
        [InlineData(@"{{ a | prepend: 'a'}}", @"{""a"":""bc"",""b"":""a""}", @"abc")]
        [InlineData(@"{{ a | prepend: b}}", @"{""a"":""bc"",""b"":""a""}", @"abc")]
        [InlineData(@"{{ source | lstrip }}", @"{""source"":"" ab c  ""}", @"ab c")]
        [InlineData(@"{{ source | lstrip }}", @"{""source"":"" \tab c  \n \t""}", @"ab c")]
        [InlineData(@"{{ 3 | times:4 }}", @"{}", @"12")]
        [InlineData(@"{{ 'foo' | times:4 }}", @"{}", @"0")]
        //[InlineData(@"{{ '2.1' | times:3 | replace: '.','-' | plus:0}}", @"{}", @"6")]
        [InlineData(@"{{ input | round }}", @"{""input"":4.6}", @"5")]
        [InlineData(@"{{ '4.3' | round }}", @"{}", @"4")]
        [InlineData(@"{{ input | round: 2 }}", @"{""input"":4.5612}", @"4.56")]
        //[InlineData(@"{{ 'a' | to_number }}", @"{}", @"a")]
        //[InlineData(@"{{ foo | first }}", @"{""foo"":[""#<ThingWithToLiquid:0x00000002d315b0>""]}", @"foobar")]
        //[InlineData(@"{{ foo | last }}", @"{""foo"":[""#<ThingWithToLiquid:0x00000002d21020>""]}", @"foobar")]
        //[InlineData(@"{{ procs | map: ""test"" }}", @"{""procs"":[""#<Proc:0x00000002d19758@/home/bridge/work/liquid/test/integration/standard_filter_test.rb:223>""]}", @"testfoo")]
        [InlineData(@"{{ source | rstrip }}", @"{""source"":"" ab c  ""}", @"ab c")]
        [InlineData(@"{{ source | rstrip }}", @"{""source"":"" \tab c  \n \t""}", @"ab c")]
        [InlineData(@"{{ input | ceil }}", @"{""input"":4.6}", @"5")]
        [InlineData(@"{{ '4.3' | ceil }}", @"{}", @"5")]
        [InlineData(@"{{ 12 | divided_by:3 }}", @"{}", @"4")]
        [InlineData(@"{{ 15 | divided_by:3 }}", @"{}", @"5")]
        [InlineData(@"{{ 2.0 | divided_by:4 }}", @"{}", @"0.5")]
        [InlineData(@"{{ input | minus:operand }}", @"{""input"":5,""operand"":1}", @"4")]
        [InlineData(@"{{ '4.3' | minus:'2' }}", @"{}", @"2.3")]
        [InlineData(@"{{ 'a a a a' | remove_first: 'a ' }}", @"{}", @"a a a")]
        [InlineData(@"{{ a | append: 'd'}}", @"{""a"":""bc"",""b"":""d""}", @"bcd")]
        [InlineData(@"{{ a | append: b}}", @"{""a"":""bc"",""b"":""d""}", @"bcd")]
        [InlineData(@"{{ ""foo"" | map: ""__id__"" }}", @"{}", @"")]
        [InlineData(@"{{ ""foo"" | map: ""inspect"" }}", @"{}", @"")]
        [InlineData(@"{{ source | newline_to_br }}", @"{""source"":""a\nb\nc""}", @"a<br />
b<br />
c")]
        [InlineData(@"{{ '1 1 1 1' | replace_first: '1', 2 }}", @"{}", @"2 1 1 1")]
        [InlineData(@"{% assign key = 'foo' %}{{ thing | map: key | map: 'bar' }}", @"{""thing"":{""foo"":{""bar"":42}}}", @"42")]
//        [InlineData(@"{% tablerow n in numbers cols:3%} {{n}} {% endtablerow %}", @"{""numbers"":[""@array""]}", @"<tr class=""row1"">
//<td class=""col1""> 1 </td><td class=""col2""> 2 </td><td class=""col3""> 3 </td></tr>
//<tr class=""row2""><td class=""col1""> 4 </td><td class=""col2""> 5 </td><td class=""col3""> 6 </td></tr>")]
      
        [InlineData(@"{% tablerow n in numbers cols:3 offset:1 limit:6%} {{n}} {% endtablerow %}", @"{""numbers"":[0,1,2,3,4,5,6,7]}", @"<tr class=""row1"">
<td class=""col1""> 1 </td><td class=""col2""> 2 </td><td class=""col3""> 3 </td></tr>
<tr class=""row2""><td class=""col1""> 4 </td><td class=""col2""> 5 </td><td class=""col3""> 6 </td></tr>")]
        [InlineData(@"{% tablerow n in numbers cols:3%} {{n}} {% endtablerow %}", @"{""numbers"":[1,2,3,4,5,6]}", @"<tr class=""row1"">
<td class=""col1""> 1 </td><td class=""col2""> 2 </td><td class=""col3""> 3 </td></tr>
<tr class=""row2""><td class=""col1""> 4 </td><td class=""col2""> 5 </td><td class=""col3""> 6 </td></tr>")]
        [InlineData(@"{% tablerow n in numbers cols:5%} {{n}} {% endtablerow %}", @"{""numbers"":[1,2,3,4,5,6]}", @"<tr class=""row1"">
<td class=""col1""> 1 </td><td class=""col2""> 2 </td><td class=""col3""> 3 </td><td class=""col4""> 4 </td><td class=""col5""> 5 </td></tr>
<tr class=""row2""><td class=""col1""> 6 </td></tr>")]
        [InlineData(@"{% tablerow n in collections.frontpage cols:3%} {{n}} {% endtablerow %}", @"{""collections"":{""frontpage"":[1,2,3,4,5,6]}}", @"<tr class=""row1"">
<td class=""col1""> 1 </td><td class=""col2""> 2 </td><td class=""col3""> 3 </td></tr>
<tr class=""row2""><td class=""col1""> 4 </td><td class=""col2""> 5 </td><td class=""col3""> 6 </td></tr>")]
        [InlineData(@"{% tablerow n in collections['frontpage'] cols:3%} {{n}} {% endtablerow %}", @"{""collections"":{""frontpage"":[1,2,3,4,5,6]}}", @"<tr class=""row1"">
<td class=""col1""> 1 </td><td class=""col2""> 2 </td><td class=""col3""> 3 </td></tr>
<tr class=""row2""><td class=""col1""> 4 </td><td class=""col2""> 5 </td><td class=""col3""> 6 </td></tr>")]
        [InlineData(@"{% assign foo = values | split: "","" %}.{{ foo[1] }}.", @"{""values"":""foo,bar,baz""}", @".bar.")]
        [InlineData(@"{% assign foo = values %}.{{ foo[0] }}.", @"{""values"":[""foo"",""bar"",""baz""]}", @".foo.")]
        [InlineData(@"{% assign foo = values %}.{{ foo[1] }}.", @"{""values"":[""foo"",""bar"",""baz""]}", @".bar.")]
        [InlineData(@"{% if var == nil %} true {% else %} false {% endif %}", @"{""var"":null}", @"true")]
        [InlineData(@"{% if var == null %} true {% else %} false {% endif %}", @"{""var"":null}", @"true")]
        [InlineData(@"{% if array == empty %} true {% else %} false {% endif %}", @"{""array"":[]}", @"true")]
        [InlineData(@"{% if var != nil %} true {% else %} false {% endif %}", @"{""var"":1}", @"true")]
        [InlineData(@"{% if var != null %} true {% else %} false {% endif %}", @"{""var"":1}", @"true")]
        [InlineData(@"{% if 'test' == 'test' %} true {% else %} false {% endif %}", @"{}", @"true")]
        [InlineData(@"{% if 0 < 1 %} true {% else %} false {% endif %}", @"{}", @"true")]
        [InlineData(@"{% if 1 > 0 %} true {% else %} false {% endif %}", @"{}", @"true")]
        [InlineData(@"{% if var == 'hello there!' %} true {% else %} false {% endif %}", @"{""var"":""hello there!""}", @"true")]
        [InlineData(@"{% if true != true %} true {% else %} false {% endif %}", @"{}", @"false")]
        [InlineData(@"{% if 'hello there!' == var %} true {% else %} false {% endif %}", @"{""var"":""hello there!""}", @"true")]
        [InlineData(@"{% if true == true %} true {% else %} false {% endif %}", @"{}", @"true")]
        [InlineData(@"{% if 0 > 0 %} true {% else %} false {% endif %}", @"{}", @"false")]
        [InlineData(@"{% if 'test' != 'test' %} true {% else %} false {% endif %}", @"{}", @"false")]
        [InlineData(@"{% if var == ""hello there!"" %} true {% else %} false {% endif %}", @"{""var"":""hello there!""}", @"true")]
        [InlineData(@"{% if ""hello there!"" == var %} true {% else %} false {% endif %}", @"{""var"":""hello there!""}", @"true")]
        [InlineData(@"{% if 0 <= 0 %} true {% else %} false {% endif %}", @"{}", @"true")]
        [InlineData(@"{% if null <= 0 %} true {% else %} false {% endif %}", @"{}", @"false")]
        [InlineData(@"{% if 0 <= null %} true {% else %} false {% endif %}", @"{}", @"false")]
        [InlineData(@"{% if array == empty %} true {% else %} false {% endif %}", @"{""array"":[1,2,3]}", @"false")]
        [InlineData(@"{% if 0 >= 0 %} true {% else %} false {% endif %}", @"{}", @"true")]
        [InlineData(@"{%increment port %}", @"{}", @"0")]
        //[InlineData(@"{%decrement port %}", @"{""port"":10}", @"9")]
        //[InlineData(@"{% break %}", @"{""i"":1}", @"")]
        public void It_Should_Match_Ruby_Output(String input, String assigns, String expected) {

            // Arrange
            ITemplateContext ctx = new TemplateContext()
                .WithAllFilters()
                .WithFileSystem(new TestFileSystem());
            
            foreach (var tuple in DictionaryFactory.CreateStringMapFromJson(assigns))
            {
                ctx.DefineLocalVariable(tuple.Item1, tuple.Item2);
            }

            
            var template = LiquidTemplate.Create(input);
            
            // Act
            String result = template.LiquidTemplate.Render(ctx).Result;
        
            // Assert
            Assert.Equal(expected, result.Trim());
        }


        [Theory]
        //[InlineData(@"{% case false %}{% when %}true{% endcase %}", @"{}", @"Liquid syntax error: Syntax Error in tag 'case' - Valid when condition: {% when [condition] [or condition2...] %}")]
        [InlineData(@"{% case false %}{% huh %}true{% endcase %}", @"{}", @"Liquid syntax error: Unknown tag 'huh'")]
        //[InlineData(@"{{ var2 }}{% capture %}{{ var }} foo {% endcapture %}{{ var2 }}{{ var2 }}", @"{""var"":""content""}", @"Liquid syntax error: Syntax Error in 'capture' - Valid syntax: capture [var]")]
        [InlineData(@"{% unknown_tag %}", @"{}", @"Liquid syntax error: Unknown tag 'unknown_tag'")]
        //[InlineData(@"{{ 1 | modulo: 0 }}", @"{}", @"Liquid error: divided by 0")]
        //[InlineData(@"{{ 1.0 | divided_by: 0.0 | ceil }}", @"{}", @"Liquid error: Computation results to 'Infinity'")]
        //[InlineData(@"{{ 1.0 | divided_by: 0.0 | round }}", @"{}", @"Liquid error: Infinity")]
        //[InlineData(@"{% if %}", @"{}", @"Liquid syntax error: Syntax Error in tag 'if' - Valid syntax: if [expression]")]
        //[InlineData(@"{% if jerry == 1 %}", @"{}", @"Liquid syntax error: 'if' tag was never closed")]
        //[InlineData(@"{% if 1 or throw or or 1 %}yes{% endif %}", @"{}", @"Liquid syntax error: Syntax Error in tag 'if' - Valid syntax: if [expression]")]
        //[InlineData(@"{{ 1 | modulo: 0 }}", @"{}", @"Liquid error: divided by 0")]
        //[InlineData(@"{{ 1.0 | divided_by: 0.0 | floor }}", @"{}", @"Liquid error: Computation results to 'Infinity'")]
//        [Ignore("Need to fix this")]
        public void It_Should_Generate_An_Exception(String input, String assigns, String expectedMessage)
        {
            // Arrange
            ITemplateContext ctx = new TemplateContext()
                .WithAllFilters()
                .WithFileSystem(new TestFileSystem());
            //Console.WriteLine(input);
            foreach (var tuple in DictionaryFactory.CreateStringMapFromJson(assigns))
            {
                ctx.DefineLocalVariable(tuple.Item1, tuple.Item2);
            }
            var template = LiquidTemplate.Create(input);
            IList<LiquidError> errors = new List<LiquidError>();
//            try
//            {
                String result = template.LiquidTemplate.Render(ctx, onRenderingError: errors.Add);
                //Console.WriteLine("RenderingErrors")
                Assert.Equal(1, errors.Count);
                Assert.Contains(expectedMessage, errors[0].ToString());
                //Assert.Fail("Expected exception: " + expectedMessage);
//            }
//            catch (LiquidParserException ex)
//            {
                // Assert
                //Assert.That(ex.LiquidErrors[0].ToString(), Does.Contain(expectedMessage));
//            }
            //catch (LiquidRendererException ex)
            //{
                // Assert
                //Assert.That(ex.LiquidErrors[0].ToString(), Does.Contain(expectedMessage));
              //  Assert.That(errors.ToString(), Does.Contain(expectedMessage));
            //}
        }

    }
}
